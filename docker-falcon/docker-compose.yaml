services:
# PROMETHEUS ==============================================================================
  falcon-prometheus:
    image: prom/prometheus:latest
    container_name: falcon-prometheus
    depends_on:
      - falcon-assets-manager
    command:
      - --config.file=/etc/prometheus/config.yml
    volumes:
      - ../config/prometheus:/etc/prometheus:ro
    volumes_from:
      - falcon-assets-manager:ro
    networks:
      - governify-falcon
# NGINX AND CERTS ==============================================================================
  # certbot:
  #   image: certbot/certbot
  #   restart: unless-stopped
  #   volumes:
  #     - ../data/certbot/conf:/etc/letsencrypt
  #     - ../data/certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  falcon-nginx:
    environment:
      - FALCON_SERVICES_PREFIX=${SERVICES_PREFIX:?}
      - FALCON_DNS_SUFFIX=${DNS_SUFFIX:?}
    container_name: falcon-nginx
    image: 'nginx:stable'
    ports:
#      - '443:443'
      - '80:80'
    depends_on:
      - falcon-prometheus
      - falcon-render
      - falcon-assets-manager
      - falcon-reporter
      - falcon-influx-reporter
      - falcon-registry
      - falcon-mongo-registry
      - falcon-collector-dynamic
      - falcon-dashboard
      - falcon-director
    volumes:
      # - '../config/nginx/nginx.conf:/etc/nginx/nginx.conf'
      # - '../data/certbot/conf:/etc/letsencrypt'
      # - '../config/nginx/static:/etc/nginx/static'
      # - '../certs:/etc/nginx/certs'
      # - '../config/nginx/https:/etc/nginx/templates'
      - '../config/nginx/http:/etc/nginx/templates'
      # - '../logs/bouncer-nginx:/var/log/nginx'
      # - '../data/certbot/www:/var/www/certbot'
    networks:
      - governify-falcon
# =========================================
  falcon-render:
    container_name: falcon-render
    image: governify/render:v2.2.0
    environment:
      - NODE_ENV=production
      - PORT=80
      - LOGIN_USER=${LOGIN_USER:?}
      - LOGIN_PASSWORD=${LOGIN_PASSWORD:?}
      - DEFAULT_VIEW=http://falcon-assets-manager/api/v1/public/renders/index/view.html
      - DEFAULT_CONTROLLER=http://falcon-assets-manager/api/v1/public/renders/index/controller.js
      - DEFAULT_MODEL=http://falcon-assets-manager/api/v1/public/renders/index/model.json
      - GOV_INFRASTRUCTURE=${GOV_INFRASTRUCTURE:?}
      - LAYOUT=bootstrap5.html
    networks:
      - governify-falcon
    depends_on:
      - falcon-assets-manager
# =========================================
  falcon-assets-manager:
    container_name: falcon-assets-manager
    image: 'governify/assets-manager:v1.4.1'
    environment:
      - NODE_ENV=production
      - PORT=80
      - LOGIN_USER=${LOGIN_USER:?}
      - LOGIN_PASSWORD=${LOGIN_PASSWORD:?}
      - SERVICES_PREFIX=${SERVICES_PREFIX:?}
      - DNS_SUFFIX=${DNS_SUFFIX:?}
      - PRIVATE_KEY=${KEY_ASSETS_MANAGER_PRIVATE:?}
      - ASSETS_REPOSITORY=https://github.com/governify/assets-falcon
      - ASSETS_REPOSITORY_BRANCH=${ASSETS_REPOSITORY_BRANCH:?}
    networks:
      - governify-falcon
    volumes:
      - 'falcon-assets-volume:/home/project'
    restart: 'unless-stopped'
# =========================================
  falcon-reporter:
    container_name: falcon-reporter
    image: governify/reporter:v2.2.0
    environment:
      - NODE_ENV=production
      - PORT=80
      - DB_HOST=influxdb
      - GOV_INFRASTRUCTURE=${GOV_INFRASTRUCTURE:?}
    networks:
      - governify-falcon
    depends_on:
      - falcon-influx-reporter
      - falcon-assets-manager
# =========================================
  falcon-influx-reporter:
    container_name: falcon-influx-reporter
    image: 'influxdb:1.8.4-alpine'
    environment:
      - INFLUXDB_BIND_ADDRESS=:8088
    volumes:
      - 'falcon-influxdb-volume:/var/lib/influxdb'
    networks:
      - governify-falcon
# =========================================
  falcon-registry:
    container_name: falcon-registry
    image: 'governify/registry:v3.4.0'
    networks:
      - governify-falcon
    environment:
      - NODE_ENV=production
      - PORT=80
      - GOV_INFRASTRUCTURE=${GOV_INFRASTRUCTURE:?}
    depends_on:
      - falcon-assets-manager
      - falcon-mongo-registry
# =========================================
  falcon-mongo-registry:
    container_name: falcon-mongo-registry
    image: mongo
    networks:
      - governify-falcon
    volumes:
      - 'falcon-registry-db-volume:/data/db'
# =========================================
  falcon-collector-dynamic:
    container_name: falcon-collector-dynamic
    image: 'governify/collector-dynamic:v1.3.0'
    networks:
      - governify-falcon
    environment:
      - NODE_ENV=production
      - PORT=80
      - GOV_INFRASTRUCTURE=${GOV_INFRASTRUCTURE:?}
    depends_on:
      - falcon-assets-manager
# =========================================
  falcon-dashboard:
    container_name: falcon-dashboard
    image: governify/dashboard:latest
    environment:
      - NODE_ENV=production
      - GOV_INFRASTRUCTURE=${GOV_INFRASTRUCTURE:?}
      - INFLUX_URL=http://falcon-influx-reporter:8086
      - GF_PATHS_PLUGINS=/usr/share/grafana/plugins
    networks:
      - governify-falcon
# =========================================
  falcon-director:
    container_name: falcon-director
    image: 'governify/director:v1.4.0'
    networks:
      - governify-falcon
    environment:
      - NODE_ENV=production
      - PORT=80
      - GOV_INFRASTRUCTURE=${GOV_INFRASTRUCTURE:?}
      - INFLUXDB_BIND_ADDRESS=:8088
    depends_on:
      - falcon-assets-manager
volumes:
  falcon-assets-volume: null
  falcon-influxdb-volume: null
  falcon-registry-db-volume: null
networks:
  governify-falcon:
